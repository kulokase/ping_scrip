#!/bin/bash

#Author: kulokase
#Time: 2012-09-17

#Usage: scriopt <dst File path>
#Example: script1 ~/Ping/ 
#checking files(ping-data)will save in $TargetPath
#There is an out file $LogFileName per day.

Time=$(date '+%Y-%m-%d_%k:%M')
Hour=$(date '+%k')
Minut=$(date '+%M')
TargetPath=$1
LogFileName=$(date '+log_%Y-%m-%d')

#Count the range of 5 minuts in an hour
#Example: 0-4=0, 5-9=1, 10-14=2, ...55-59=11
Counter=$Minut
let Counter/=5

#echo $Counter
#echo "----------"

#test for count
#for i in `seq 0 59`;
#do
#	let Counter=$i
#	let Counter/=5
#	echo $Counter
#done

#reguler expression for checking file is correct
regex_day="([0-9]{4}-[0-9]{2}-[0-9]{2})"
regex="(ping_$regex_day\_[0-9]{1,2}\:[0-9]{1,2})"
#echo $regex
#echo "----------"

#reguler expression for "find" command to find ping-data
case $Counter in
1)
	regex2="(ping_$regex_day\_$Hour\:0[0-4]{1})"
;;
2)
	regex2="(ping_$regex_day\_$Hour\:0[5-9]{1})"
;;
3)
	regex2="(ping_$regex_day\_$Hour\:1[0-4]{1})"
;;
4)
	regex2="(ping_$regex_day\_$Hour\:1[5-9]{1})"
;;
5)
	regex2="(ping_$regex_day\_$Hour\:2[0-4]{1})"
;;
6)
	regex2="(ping_$regex_day\_$Hour\:2[5-9]{1})"
;;
7)
	regex2="(ping_$regex_day\_$Hour\:3[0-4]{1})"
;;
8)
	regex2="(ping_$regex_day\_$Hour\:3[5-9]{1})"
;;
9)
	regex2="(ping_$regex_day\_$Hour\:4[0-4]{1})"
;;
10)
	regex2="(ping_$regex_day\_$Hour\:4[5-9]{1})"
;;
11)
	regex2="(ping_$regex_day\_$Hour\:5[0-4]{1})"
;;
0)
	regex2="(ping_$regex_day\_$Hour\:5[5-9]{1})"
;;
*)
	echo "error in \$Counter"
;;
esac
#echo $Counter
#echo $regex2
#echo "----------"

cd $TargetPath

for file in *
do
#	echo ${file}
#	echo "$regex"
	if [[ ${file} =~ $regex2 ]]; then
#		echo "Match file"
#print the time into log file
		echo "-----------"  >> "$LogFileName"
		echo $file >> "$LogFileName"
#print the ping-data answer into log file
		cat $file | tail -2 | head -1 | awk '{if($1 != $4){print $0} else {print "OK"}}' >> "$LogFileName" 
		cat $file | head -n -4 | tail -n +3 | awk '{print $5}' | sed "s/icmp_req=//g" | awk 'BEGIN{i=1}{if(i<$1 && i<=60){while(i<$1){print i,",";i++}i++}else{i++}}' >> "$LogFileName"
#	else
#		echo "$file :Doesn't match file"
	fi
done
